name: Forecast on the Fall 2025 AI tournament questions

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *" # Runs every 5 minutes, the Github Actions' minimum frequency, but it checks if a prediction was already made today

# Concurrency group to prevent parallel runs and leave at most 1 job run queued after the current job finishes
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

# Job that runs every 5 minutes to check for new questions in the AIB tournament and predicts
jobs:
  forecast_job:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # Makes the job not have to download dependencies every time it runs but it won't get updates from them.
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 4
          max_attempts: 3
          retry_wait_seconds: 15
          command: poetry install --no-interaction --no-root
      - name: Download previous data
        uses: dawidd6/action-download-artifact@v11
        with:
          name: latest_prediction_dates_aib_tournament_artifact
          path: ./
          use_unzip: true
          if_no_artifact_found: warn
        continue-on-error: true
      - name: Check downloaded file
        run: |
          echo "Files in current directory:"
          ls -la
    
          if [ -f "latest_prediction_dates_aib_tournament.txt" ]; then
            echo "Previous data file found"
            cat latest_prediction_dates_aib_tournament.txt
          else
            echo "No previous data file found"
          fi
      - name: Run bot
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 15
          command: poetry run python main.py --mode aib_tournament
        env:
          METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      - name: Upload data artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest_prediction_dates_aib_tournament_artifact
          path: latest_prediction_dates_aib_tournament.txt